[tool.poetry]
name = "citation-graph"
version = "0.1.0"
description = "AI-powered legal research platform with citation graph analysis"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
    { include = "services" },
    { include = "api" },
    { include = "mcp_server" },
    { include = "shared" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = {extras = ["email"], version = "^2.11.5"}
pydantic-settings = "^2.1.0"
langgraph = "^0.0.30"
langchain = "^0.1.0"
langchain-anthropic = "^0.1.0"
langchain-openai = "^0.0.5"
chromadb = "^0.4.18"
neo4j = "^5.15.0"
redis = "^5.0.1"
asyncpg = "^0.29.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
httpx = "^0.25.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
tenacity = "^8.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
ruff = "^0.1.7"
mypy = "^1.7.1"
types-redis = "^4.6.0"
types-passlib = "^1.7.7"
respx = "^0.20.0"
factory-boy = "^3.3.0"
faker = "^19.0.0"
bandit = "^1.8.3"

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "PT", "SIM", "RUF"]
ignore = ["E501", "B008", "RUF001", "RUF002", "RUF003"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=services --cov=api --cov=mcp_server --cov=shared --cov-report=term-missing"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"