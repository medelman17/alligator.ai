[tool:pytest]
# Pytest configuration for citation graph platform

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 3.11

# Required plugins
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=shared
    --cov=services
    --cov=api
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10

# Async support
asyncio_mode = auto

# Test markers
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that require database connections
    agent: Tests for AI agent workflows
    accuracy: Tests for legal research accuracy and correctness
    performance: Performance and load tests
    slow: Tests that take a long time to run (>30 seconds)
    external: Tests that require external services (APIs, etc.)
    
# Ignore warnings from dependencies
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:pkg_resources.*
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Test data directories
testmon_datadir = .testmondata

# Coverage configuration
[coverage:run]
source = shared, services, api, mcp_server
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */conftest.py
    */.tox/*
    */migrations/*
    */scripts/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml